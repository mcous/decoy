name: Continuous integration

on: [push]

jobs:
  test:
    name: Test Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.7", "3.8", "3.9"]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: pip install poetry && poetry install
      - name: Run tests
        run: poetry run pytest

  check:
    name: Lint and type checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.8"
      - name: Install dependencies
        run: pip install poetry && poetry install
      - name: Format checks
        run: poetry run black --check .
      - name: Lint checks
        run: poetry run flake8
      - name: Type checks
        run: poetry run mypy

  build:
    name: Build assets and deploy on tags
    runs-on: ubuntu-latest
    needs: [test, check]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.8"
      - name: Install dependencies
        run: pip install poetry
      - name: Build artifacts
        run: |
          poetry build
          poetry run mkdocs build
      - if: startsWith(github.ref, 'refs/tags/v')
        name: Deploy to PyPI
        env:
          USER_NAME: ${{ github.actor }}
          USER_ID: ${{ github.event.sender.id }}
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: |
          git config user.name "$USER_NAME (GitHub Actions)"
          git config user.email "$USER_ID+$USER_NAME@users.noreply.github.com"
          poetry config pypi-token.pypi $PYPI_TOKEN
          poetry publish
          poetry run mkdocs gh-deploy
