[project]
name = "decoy"
version = "2.1.2"
description = "Opinionated mocking library for Python"
readme = "README.md"
license = "MIT"
requires-python = ">=3.7"
authors = [
    {name = "Michael Cousins", email = "michael@cousins.io>"},
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Testing",
    "Topic :: Software Development :: Testing :: Mocking",
    "Typing :: Typed",
]

[project.urls]
Homepage = "https://michael.cousins.io/decoy/"
Documentation = "https://michael.cousins.io/decoy/"
Repository = "https://github.com/mcous/decoy"
Issues = "https://github.com/mcous/decoy/issues"
Changelog = "https://github.com/mcous/decoy/releases"

[project.entry-points."pytest11"]
"decoy" = "decoy.pytest_plugin"

[tool.poetry.group.dev.dependencies]
poethepoet = "0.19.0"

[tool.poetry.group.test.dependencies]
coverage = { version = "7.2.7", extras = ["toml"] }
mypy = [
    { version = "1.4.1", python = "<3.8" },
    { version = "1.5.0", python = ">=3.8" },
]
pytest = "7.4.0"
pytest-asyncio = "0.21.1"
pytest-mypy-plugins = "2.0.0"
pytest-xdist = "3.5.0"
ruff = "0.11.0"

[tool.poetry.group.docs.dependencies]
mkdocs = { version = "1.5.3", python = ">=3.8" }
mkdocs-material = { version = "9.4.8", python = ">=3.8" }
mkdocstrings = { version = "0.23.0", extras = ["python"], python = ">=3.8" }

[tool.poe.tasks]
all = [
    "check",
    "lint",
    "format-check",
    "test-once",
    "coverage",
    "docs-build",
    "build",
]
check = "mypy"
lint = "ruff check ."
format = "ruff format ."
format-check = "ruff format --check ."
test = "pytest -f"
test-once = "coverage run --branch --source=decoy -m pytest --mypy-same-process"
coverage = "coverage report"
coverage-xml = "coverage xml"
docs = "mkdocs serve"
docs-build = "mkdocs build"
build = "poetry build"
check-ci = ["check", "lint", "format-check"]
test-ci = ["test-once", "coverage-xml"]
build-ci = ["docs-build", "build"]

[tool.pytest.ini_options]
addopts = "--color=yes --mypy-ini-file=tests/typing/mypy.ini --mypy-only-local-stub"
asyncio_mode = "auto"

[tool.mypy]
files = ["decoy", "tests"]
plugins = ["decoy/mypy/plugin.py"]
strict = true
show_error_codes = true

[tool.coverage.report]
exclude_lines = ["@overload", "if TYPE_CHECKING:"]

[tool.ruff]
target-version = "py37"
extend-exclude = [".cache"]

[tool.ruff.lint]
select = ["ANN", "B", "D", "E", "F", "RUF", "W"]
ignore = ["ANN401", "D107", "E501"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
